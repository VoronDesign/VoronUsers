[servo brush_servo]
pin: PC12                                            # check were your servo is wired
maximum_servo_angle: 180                             # DO NOT CHANGE THIS!
minimum_pulse_width: 0.00025                         # DO NOT CHANGE THIS!
maximum_pulse_width: 0.0024                          # DO NOT CHANGE THIS!

[gcode_macro _brush_variables]
variable_wipe_count:                      8          # insert as many wipes you want the nozzle to make
variable_servo_name:          'brush_servo'          # insert you servo name
variable_brush_extended:                170          # insert you angle when the brush is supposed to be extended
variable_brush_retracted:                80          # insert you angle when the brush is supposed to be retracted
variable_pos_x:                          35          # insert your X position when your nozzle is in the middle of the brush
variable_pos_z:                          61          # insert your Z position when your nozzle is right ABOVE the brush
variable_safe_pos_x:                    100          # insert your X position where the servo arm won't collapse with the toolhead
variable_safe_pos_z:                     65          # insert your Z position where the servo arm won't collapse with the toolhead
variable_speed:                        3500          # insert the speed you want the noozzle to scrub over the brush
gcode:

##############################################
### Do not change anything below this line ###
##############################################
[gcode_macro clean_nozzle]
description: Clean your nozzle
gcode:
    {% set wipe_count = printer["gcode_macro _brush_variables"].wipe_count %}
    {% set servo_name = printer["gcode_macro _brush_variables"].servo_name %}      
    {% set brush_extended = printer["gcode_macro _brush_variables"].brush_extended %}                         
    {% set brush_retracted = printer["gcode_macro _brush_variables"].brush_retracted %}                           
    {% set pos_x = printer["gcode_macro _brush_variables"].pos_x %}                                  
    {% set pos_z = printer["gcode_macro _brush_variables"].pos_z %}   
    {% set safe_pos_x = printer["gcode_macro _brush_variables"].safe_pos_x %}                                  
    {% set safe_pos_z = printer["gcode_macro _brush_variables"].safe_pos_z %}   
    {% set speed = printer["gcode_macro _brush_variables"].speed %}
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}  

    SAVE_GCODE_STATE NAME=clean_nozzle_state                         # save gcode state
    M117 starting nozzle scrub!
    STATUS_CLEANING                                                  # SB LED
    M400                                                             # wait for previus moves to finisch
    G0 X{ safe_pos_x } Z{ safe_pos_z }                               # move to a safe position
    M400                                                             # wait for previus moves to finisch
    SET_SERVO SERVO={ servo_name } ANGLE={ brush_extended }          # bring brush in clean position
    G4 P250                                                         
    SET_SERVO SERVO={ servo_name } WIDTH=0.0
    G90                                                              # absolute positioning
    G0 X{ pos_x - 25 } Z{ pos_z }                                    # bring toolhead in start position
    {% for wipe in range(wipe_count) %}                              # wipe
        G0 X{ pos_x - 25 } F{ speed }
        G0 X{ pos_x + 25 } F{ speed }
    {% endfor %}
    G0 X{ Mx / 2}                                                   # move toolhead to the center of the x-axis
    SET_SERVO SERVO={ servo_name } ANGLE={ brush_retracted }        # bring servo in safe position
    G4 P250
    SET_SERVO SERVO={ servo_name } WIDTH=0.0
    G91                                                             # relative positioning
    STATUS_READY                                                    # SB LED
    M117 nozzle scrub done!
    RESTORE_GCODE_STATE NAME=clean_nozzle_state                     # restore gcode state

# only needed for installation
[gcode_macro _brush_servo_test_angle]
gcode:
	{% set angle  = params.ANGLE|int %}
    {% set servo_name = printer["gcode_macro _brush_variables"].servo_name %}   

    SET_SERVO SERVO={ servo_name } ANGLE={ angle }
    G4 P250
    SET_SERVO SERVO={ servo_name } WIDTH=0.0